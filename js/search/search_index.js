var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/FoldableModule.html",[0,1.631,1,1.146]],["body/modules/FoldableModule.html",[0,2.568,1,2.196,2,1.754,3,2.142,4,2.142,5,3.136,6,2.142,7,2.142,8,3.136,9,2.142,10,2.142,11,2.142,12,2.206,13,0.067,14,2.206,15,2.206,16,2.81,17,2.142,18,1.464,19,0.874,20,0.73,21,0.874,22,2.732,23,1.04,24,3.584,25,3.584,26,2.81,27,2.81,28,2.81,29,1.617,30,1.364,31,0.638,32,1.617,33,1.617,34,0.789,35,1.135,36,2.81,37,0.874,38,2.732,39,2.732,40,1.464,41,2.142,42,1.359,43,0.73,44,0.486,45,0.037,46,0.048,47,0.037]],["title/directives/IfSpanDirective.html",[12,1.146,48,0.967]],["body/directives/IfSpanDirective.html",[12,1.262,13,0.068,19,0.465,20,0.388,21,0.465,23,0.865,30,1.447,31,0.798,32,1.642,34,0.802,35,0.917,37,0.465,42,0.896,43,0.607,44,0.259,45,0.019,46,0.03,47,0.019,48,0.865,49,0.656,50,3.173,51,1.14,52,2.272,53,4.344,54,1.025,55,0.957,56,1.161,57,2.272,58,2.272,59,2.983,60,2.272,61,2.272,62,2.272,63,2.272,64,2.272,65,1.499,66,2.272,67,0.865,68,1.065,69,1.499,70,3.64,71,2.855,72,1.549,73,0.933,74,1.459,75,2.855,76,0.32,77,1.782,78,1.204,79,1.459,80,3.164,81,3.164,82,1.218,83,0.865,84,0.933,85,2.798,86,3.164,87,4.484,88,1.776,89,1.453,90,2.031,91,2.031,92,0.553,93,2.031,94,2.272,95,4.484,96,1.796,97,2.798,98,2.272,99,3.64,100,3.64,101,3.64,102,2.798,103,2.272,104,1.499,105,1.453,106,1.459,107,1.696,108,2.031,109,1.453,110,2.272,111,1.453,112,1.453,113,2.798,114,2.031,115,1.459,116,0.553,117,0.933,118,0.553,119,0.465,120,0.465,121,0.933,122,0.933,123,0.656,124,1.14,125,1.696,126,1.499,127,1.499,128,1.782,129,1.453,130,1.575,131,0.933,132,2.879,133,1.453,134,1.453,135,1.453,136,1.453,137,0.933,138,1.499,139,1.453,140,2.798,141,3.164,142,1.453,143,3.164,144,3.433,145,1.453,146,2.798,147,1.459,148,0.465,149,0.465,150,0.933,151,0.933,152,0.933,153,1.453,154,1.453,155,2.798,156,1.453,157,1.204,158,0.933,159,1.453,160,1.796,161,0.553,162,1.453,163,0.553,164,1.14,165,0.779,166,1.453,167,0.553,168,2.272,169,1.453,170,2.272,171,2.798,172,2.272]],["title/injectables/ScreenContext.html",[34,0.559,173,1.146]],["body/injectables/ScreenContext.html",[13,0.069,19,0.571,20,0.477,21,0.571,23,0.679,31,0.789,33,1.2,34,0.7,35,1.006,37,0.571,42,0.571,43,0.711,44,0.473,45,0.024,46,0.036,47,0.024,54,1.971,55,0.775,56,0.849,65,1.703,67,0.679,68,1.012,76,0.393,77,2.085,78,0.679,82,1.425,83,1.209,88,1.78,104,1.703,107,2.017,116,0.679,118,0.679,119,1.309,120,1.437,130,1.556,148,0.851,149,1.127,157,1.709,161,0.679,163,0.679,165,1.425,167,1.012,173,1.2,174,1.785,175,2.191,176,1.146,177,1.425,178,1.707,179,1.425,180,1.425,181,1.425,182,1.707,183,1.895,184,2.26,185,2.534,186,1.698,187,1.785,188,1.785,189,2.26,190,1.785,191,2.534,192,1.707,193,1.425,194,2.26,195,1.785,196,2.04,197,1.78,198,1.433,199,2.04,200,2.417,201,1.707,202,1.785,203,1.785,204,1.785,205,1.34,206,1.703,207,2.04,208,1.146,209,1.707,210,1.146,211,1.146,212,1.146,213,1.146,214,1.425,215,1.425,216,0.957,217,1.146,218,1.146,219,1.146,220,0.805,221,1.146,222,1.146,223,2.04,224,1.146,225,1.146,226,1.146,227,1.146,228,1.146,229,1.146,230,1.425,231,1.146,232,2.26,233,1.707,234,1.146,235,1.146,236,1.146,237,1.146,238,1.146,239,1.146,240,1.146,241,1.146,242,1.146,243,1.146,244,1.146,245,1.146,246,1.146,247,1.146,248,1.146,249,1.146,250,1.146,251,1.146,252,1.146,253,1.146,254,1.146,255,1.146,256,1.146]],["title/classes/ScreenContextData.html",[44,0.452,183,1.146]],["body/classes/ScreenContextData.html",[13,0.069,19,0.603,20,0.504,21,0.603,23,0.717,31,0.775,33,0.85,34,0.61,35,1.029,37,0.603,42,0.603,43,0.74,44,0.492,45,0.025,46,0.037,47,0.025,54,1.925,55,0.796,56,0.876,65,1.758,67,0.717,68,1.053,76,0.415,78,0.717,83,0.717,88,1.48,92,1.248,104,1.758,116,0.717,118,0.717,119,1.232,120,1.453,130,1.583,148,0.886,149,0.603,157,1.728,161,0.717,163,0.717,165,1.483,167,1.053,173,1.249,175,1.937,176,1.21,177,1.01,178,1.21,179,1.01,180,1.01,181,1.01,182,1.21,183,1.877,184,1.21,185,2.584,186,1.737,189,1.777,191,2.321,192,1.21,193,1.01,194,2.106,196,2.106,197,1.816,198,1.465,199,2.106,200,2.472,201,1.21,205,1.465,206,1.758,207,2.106,208,1.21,209,1.777,210,1.21,211,1.21,212,1.21,213,1.21,214,1.483,215,1.483,216,1.01,217,1.21,218,1.21,219,1.21,220,0.85,221,1.777,222,1.777,223,2.796,224,1.21,225,1.21,226,1.21,227,1.21,228,1.21,229,1.21,230,1.483,231,1.21,232,2.321,233,1.777,234,1.21,235,1.21,236,1.21,237,1.21,238,1.21,239,1.21,240,1.21,241,1.21,242,1.21,243,1.21,244,1.21,245,1.21,246,1.21,247,1.21,248,1.21,249,1.21,250,1.21,251,1.21,252,1.21,253,1.21,254,1.21,255,1.21,256,1.21,257,1.885,258,2.17,259,1.885,260,1.885,261,1.885]],["title/directives/SplitLayoutDirective.html",[14,1.146,48,0.967]],["body/directives/SplitLayoutDirective.html",[13,0.069,14,1.112,15,1.112,19,0.517,20,0.432,21,0.517,23,0.938,29,2.046,30,1.551,31,0.814,32,1.112,34,0.837,35,1.015,37,0.517,40,2.321,42,0.789,43,0.659,44,0.287,45,0.022,46,0.033,47,0.022,48,1.274,49,0.729,54,1.714,55,0.543,56,1.174,67,0.938,68,1.138,69,1.321,72,1.112,73,1.037,74,1.583,76,0.356,78,0.615,79,1.583,82,1.321,83,0.615,84,1.037,88,1.51,90,1.583,91,1.583,92,0.615,93,1.583,96,1.92,106,1.92,107,1.321,108,1.037,114,1.583,115,1.583,116,0.615,117,1.037,118,0.615,119,0.517,120,0.517,123,1.783,124,1.267,130,1.274,131,1.037,132,1.583,137,1.037,138,0.866,147,1.583,148,0.517,149,0.517,150,1.037,151,1.037,152,1.037,157,1.138,158,1.037,160,1.037,161,0.938,163,0.938,167,1.138,186,1.112,197,1.112,205,0.938,262,2.827,263,1.267,264,2.466,265,1.92,266,2.466,267,2.149,268,1.934,269,2.345,270,1.934,271,2.466,272,2.991,273,2.466,274,2.537,275,2.466,276,2.466,277,2.466,278,2.149,279,1.583,280,1.583,281,2.979,282,2.991,283,1.615,284,2.466,285,2.345,286,2.439,287,1.615,288,1.615,289,1.615,290,1.267,291,2.345,292,1.267,293,0.866,294,1.267,295,1.92,296,2.345,297,1.583,298,1.267,299,1.267,300,1.267,301,1.037,302,1.267,303,1.267,304,2.345,305,2.991,306,1.934,307,1.615,308,1.615,309,3.347,310,2.345,311,2.466,312,2.991,313,1.615,314,1.267,315,1.615,316,3.347,317,2.466,318,1.934,319,1.934,320,2.466,321,1.615,322,1.934,323,1.267,324,1.615,325,1.615,326,1.267,327,1.267,328,1.615,329,1.267,330,1.615,331,2.466,332,2.345,333,1.267,334,1.267,335,2.345,336,1.267,337,1.267,338,1.615,339,1.615]],["title/interfaces/Window.html",[198,0.967,220,1.146]],["body/interfaces/Window.html",[13,0.069,19,0.644,20,0.537,21,0.644,31,0.755,33,0.907,34,0.639,35,1.056,37,0.644,42,0.644,43,0.775,44,0.516,45,0.027,46,0.039,47,0.027,54,1.857,55,0.75,56,0.775,65,1.555,67,0.765,68,1.104,76,0.443,78,0.765,83,0.765,92,0.765,104,1.555,116,0.765,118,0.765,119,1.193,120,1.417,130,1.615,148,0.929,149,0.644,157,1.75,161,0.765,163,0.765,165,1.555,167,1.104,173,1.309,175,1.078,176,1.291,177,1.078,178,1.291,179,1.078,180,1.078,181,1.078,182,1.291,183,1.857,184,1.291,185,2.393,186,1.536,189,1.863,191,2.393,192,1.291,193,1.078,194,2.643,196,1.863,197,1.681,198,1.504,199,1.863,200,2.393,201,1.291,205,1.295,206,1.555,207,1.863,208,1.291,209,1.863,210,1.291,211,1.291,212,1.291,213,1.291,214,1.555,215,1.555,216,1.078,217,1.291,218,1.291,219,1.291,220,0.907,221,1.291,222,1.291,223,2.186,224,1.291,225,1.291,226,1.291,227,1.291,228,1.291,229,1.291,230,1.555,231,1.291,232,2.393,233,1.863,234,1.291,235,1.291,236,1.291,237,1.291,238,1.291,239,1.291,240,1.291,241,1.291,242,1.291,243,1.291,244,1.291,245,1.291,246,1.291,247,1.291,248,1.291,249,1.291,250,1.291,251,1.291,252,1.291,253,1.291,254,1.291,255,1.291,256,1.291,258,2.276,340,2.011,341,2.902]],["title/directives/WindowDirective.html",[15,1.146,48,0.967]],["body/directives/WindowDirective.html",[13,0.069,14,1.677,15,1.066,19,0.489,20,0.409,21,0.489,23,0.9,29,1.066,30,1.338,31,0.799,32,1.467,34,0.819,35,1.036,37,0.489,40,0.819,41,1.199,42,0.757,43,0.409,44,0.272,45,0.021,46,0.032,47,0.021,48,1.415,49,0.69,55,0.521,56,0.409,67,0.9,68,1.1,69,1.267,72,1.066,73,0.982,74,1.518,76,0.521,78,0.582,79,1.518,82,1.267,83,0.9,84,0.982,88,1.304,90,1.518,91,1.518,92,1.1,93,1.518,106,1.856,107,0.819,108,0.982,114,1.518,115,1.518,116,0.582,117,0.982,118,0.582,119,0.489,120,0.489,130,1.415,131,0.982,132,1.518,137,0.982,138,1.884,147,1.518,148,0.489,149,0.489,150,0.982,151,0.982,152,0.982,157,0.582,158,0.982,160,0.982,161,1.1,163,1.1,167,1.237,186,1.066,197,1.066,198,1.626,205,0.9,206,1.267,230,0.819,265,2.488,267,2.387,268,1.854,269,2.266,270,1.854,274,1.856,278,2.088,279,1.518,280,1.518,285,2.266,286,1.856,290,1.199,291,2.266,292,1.199,293,0.819,295,2.088,297,2.387,298,1.199,299,1.199,300,1.199,301,0.982,302,1.199,303,1.199,304,1.199,306,2.266,310,1.854,314,1.199,318,1.854,319,1.854,322,3.222,323,1.854,326,1.199,327,2.55,329,1.199,332,1.854,333,1.199,334,1.199,335,2.266,337,1.199,342,1.529,343,2.364,344,3.519,345,2.364,346,2.364,347,2.364,348,1.854,349,2.364,350,2.364,351,1.518,352,4.338,353,3.351,354,2.364,355,2.364,356,2.364,357,2.364,358,2.915,359,2.89,360,1.529,361,3.252,362,2.364,363,3.516,364,1.529,365,2.364,366,3.252,367,2.364,368,3.252,369,3.252,370,2.364,371,2.89,372,3.252,373,2.364,374,1.529,375,2.364,376,1.529,377,1.529,378,1.529,379,1.529]],["title/changelog.html",[380,1.151,381,1.151,382,2.147]],["body/changelog.html",[13,0.06,45,0.053,46,0.06,47,0.053]],["title/miscellaneous/enumerations.html",[383,1.151,384,2.385]],["body/miscellaneous/enumerations.html",[12,1.415,13,0.066,29,1.415,30,1.624,31,0.697,40,1.681,45,0.042,46,0.053,47,0.042,50,2.461,51,3.071,55,0.862,56,1.046,59,3.071,76,0.691,96,2.015,120,1.253,121,2.015,122,2.015,123,1.415,125,2.396,126,2.396,127,2.396,128,3.506,175,1.681,262,2.461,263,3.071,265,2.015,274,2.514,286,2.015,294,2.461,295,2.514,296,3.071,297,2.514,351,3.137,383,1.681,384,2.461,385,3.138,386,3.916,387,3.138,388,3.138,389,3.138]],["title/index.html",[76,0.473,380,1.151,381,1.151]],["body/index.html",[1,1.514,13,0.066,18,1.326,20,0.661,26,1.941,27,2.985,28,1.941,29,1.116,30,1.553,31,0.849,32,1.514,33,1.514,34,0.899,35,0.897,36,1.941,43,0.897,44,0.597,45,0.033,46,0.045,47,0.033,49,1.116,55,0.739,69,1.326,71,3.345,72,1.514,75,1.941,119,1.218,121,1.589,123,1.116,125,1.798,126,1.326,127,1.326,138,1.326,148,0.792,149,0.792,177,1.326,180,1.326,181,1.326,183,1.116,193,1.798,198,1.277,205,1.623,278,2.154,279,1.589,280,1.589,281,1.941,293,1.798,301,1.589,336,1.941,344,2.631,348,1.941,358,1.941,390,4.266,391,4.266,392,2.475,393,2.475,394,4.266,395,2.475,396,2.475,397,2.475,398,2.475,399,2.475,400,3.355,401,2.475,402,3.355,403,3.355,404,2.475,405,2.475,406,2.475,407,2.475,408,2.475,409,2.475,410,2.475,411,2.475,412,2.475,413,3.355,414,2.475,415,3.355,416,2.475,417,2.475,418,2.475,419,2.475,420,2.475,421,2.475,422,2.475,423,2.475,424,2.475,425,2.475,426,2.475,427,2.475,428,2.475,429,3.355,430,2.475,431,4.081,432,3.355,433,2.475,434,2.475,435,1.941,436,2.475,437,2.475,438,2.475,439,2.475,440,1.941,441,2.475,442,2.475,443,2.475,444,2.475,445,2.475,446,2.475,447,2.475,448,2.475,449,2.475,450,1.941]],["title/license.html",[380,1.151,381,1.151,451,1.684]],["body/license.html",[13,0.052,18,1.638,45,0.041,46,0.052,47,0.041,122,1.962,123,1.737,440,2.396,450,2.396,451,2.396,452,3.852,453,4.218,454,3.056,455,3.056,456,3.056,457,3.056,458,3.852,459,3.056,460,3.056,461,3.056,462,3.056,463,3.056,464,3.056,465,3.852,466,4.83,467,3.056,468,3.056,469,3.056,470,4.218,471,3.056,472,3.852,473,3.056,474,3.056,475,3.056,476,3.056,477,2.396,478,3.056,479,3.056,480,3.056,481,3.056,482,3.852,483,3.056,484,3.056,485,3.056,486,3.056,487,3.056,488,3.056,489,3.852,490,3.852,491,3.056,492,3.056,493,3.056,494,3.056,495,3.056,496,3.056,497,3.056,498,3.056,499,3.056,500,3.056,501,3.056,502,3.056,503,3.056,504,3.056,505,3.056,506,3.056,507,3.056,508,3.056,509,3.056,510,3.056,511,3.056,512,3.056,513,3.056,514,3.056,515,3.056,516,3.056,517,3.056,518,3.056,519,3.056]],["title/modules.html",[2,2.193]],["body/modules.html",[1,1.742,2,2.48,13,0.059,45,0.052,46,0.059,47,0.052,293,2.069,520,3.028,521,3.862,522,3.862]],["title/overview.html",[523,2.678]],["body/overview.html",[0,2.593,1,2.232,3,2.587,4,2.587,5,2.587,6,2.587,7,2.587,8,2.587,9,2.587,10,2.587,11,2.587,12,2.17,13,0.065,14,2.17,15,2.17,16,3.167,17,2.587,18,1.768,44,0.587,45,0.044,46,0.054,47,0.044,49,1.488,173,1.488,220,1.488,353,3.568,523,2.587,524,3.298]],["title/todo.html",[380,1.151,381,1.151,525,2.147]],["body/todo.html",[13,0.059,45,0.052,46,0.059,47,0.052,435,3.019,477,3.019,520,3.019,526,3.85,527,3.85,528,3.85,529,3.85]],["title/miscellaneous/variables.html",[383,1.151,530,2.385]],["body/miscellaneous/variables.html",[13,0.064,31,0.817,45,0.045,46,0.055,47,0.045,55,0.904,56,1.096,72,2.071,76,0.745,92,1.561,125,2.46,126,2.199,127,2.199,164,3.218,179,2.199,214,2.199,215,2.199,216,2.199,267,2.634,351,2.634,383,1.814,530,2.654,531,4.103,532,4.415,533,3.385,534,4.103,535,4.103]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"modules/FoldableModule.html":{},"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":352,"title":{},"body":{"directives/WindowDirective.html":{}}}],["1",{"_index":353,"title":{},"body":{"directives/WindowDirective.html":{},"overview.html":{}}}],["100",{"_index":310,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["1fr",{"_index":316,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["2021",{"_index":455,"title":{},"body":{"license.html":{}}}],["3",{"_index":524,"title":{},"body":{"overview.html":{}}}],["_",{"_index":302,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["above",{"_index":488,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":297,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"miscellaneous/enumerations.html":{}}}],["accepts",{"_index":63,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["accessors",{"_index":82,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["action",{"_index":513,"title":{},"body":{"license.html":{}}}],["active",{"_index":129,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["adapted",{"_index":409,"title":{},"body":{"index.html":{}}}],["add",{"_index":434,"title":{},"body":{"index.html":{}}}],["added",{"_index":270,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["aiming",{"_index":404,"title":{},"body":{"index.html":{}}}],["allows",{"_index":178,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["along",{"_index":277,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["and/or",{"_index":480,"title":{},"body":{"license.html":{}}}],["angular",{"_index":301,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"index.html":{}}}],["angular/core",{"_index":37,"title":{},"body":{"modules/FoldableModule.html":{},"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{}}}],["angular/platform",{"_index":292,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["app",{"_index":28,"title":{},"body":{"modules/FoldableModule.html":{},"index.html":{}}}],["appcomponent",{"_index":444,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":439,"title":{},"body":{"index.html":{}}}],["apps",{"_index":408,"title":{},"body":{"index.html":{}}}],["arising",{"_index":517,"title":{},"body":{"license.html":{}}}],["asobject",{"_index":184,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["asobservable",{"_index":149,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{},"index.html":{}}}],["assign",{"_index":355,"title":{},"body":{"directives/WindowDirective.html":{}}}],["associated",{"_index":467,"title":{},"body":{"license.html":{}}}],["authors",{"_index":506,"title":{},"body":{"license.html":{}}}],["available",{"_index":197,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{}}}],["behaves",{"_index":60,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["between",{"_index":272,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["boolean",{"_index":65,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/FoldableModule.html":{},"overview.html":{}}}],["bottom",{"_index":371,"title":{},"body":{"directives/WindowDirective.html":{}}}],["browse",{"_index":522,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":293,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"index.html":{},"modules.html":{}}}],["build",{"_index":27,"title":{},"body":{"modules/FoldableModule.html":{},"index.html":{}}}],["c",{"_index":454,"title":{},"body":{"license.html":{}}}],["calc(100vh",{"_index":370,"title":{},"body":{"directives/WindowDirective.html":{}}}],["calc(100vw",{"_index":367,"title":{},"body":{"directives/WindowDirective.html":{}}}],["canary",{"_index":422,"title":{},"body":{"index.html":{}}}],["case",{"_index":155,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["change",{"_index":268,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["change').pipe",{"_index":235,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["changed",{"_index":447,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":382,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":193,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{},"index.html":{}}}],["charge",{"_index":462,"title":{},"body":{"license.html":{}}}],["check",{"_index":433,"title":{},"body":{"index.html":{}}}],["choose",{"_index":271,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["chrome",{"_index":421,"title":{},"body":{"index.html":{}}}],["claim",{"_index":509,"title":{},"body":{"license.html":{}}}],["class",{"_index":44,"title":{"classes/ScreenContextData.html":{}},"body":{"modules/FoldableModule.html":{},"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{},"index.html":{},"overview.html":{}}}],["classes",{"_index":257,"title":{},"body":{"classes/ScreenContextData.html":{}}}],["cluster_foldablemodule",{"_index":9,"title":{},"body":{"modules/FoldableModule.html":{},"overview.html":{}}}],["cluster_foldablemodule_declarations",{"_index":10,"title":{},"body":{"modules/FoldableModule.html":{},"overview.html":{}}}],["cluster_foldablemodule_exports",{"_index":11,"title":{},"body":{"modules/FoldableModule.html":{},"overview.html":{}}}],["code",{"_index":413,"title":{},"body":{"index.html":{}}}],["column",{"_index":313,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["columngap",{"_index":321,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["common",{"_index":305,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["components",{"_index":392,"title":{},"body":{"index.html":{}}}],["condition",{"_index":95,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["conditions",{"_index":122,"title":{},"body":{"directives/IfSpanDirective.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["connection",{"_index":518,"title":{},"body":{"license.html":{}}}],["console.log('screen",{"_index":446,"title":{},"body":{"index.html":{}}}],["const",{"_index":167,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{}}}],["constructor",{"_index":83,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{}}}],["constructor(private",{"_index":336,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"index.html":{}}}],["constructor(screencontext",{"_index":84,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["container",{"_index":265,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"miscellaneous/enumerations.html":{}}}],["contains",{"_index":24,"title":{},"body":{"modules/FoldableModule.html":{}}}],["context",{"_index":119,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{},"index.html":{}}}],["context.ts",{"_index":176,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["context.ts:18",{"_index":261,"title":{},"body":{"classes/ScreenContextData.html":{}}}],["context.ts:20",{"_index":260,"title":{},"body":{"classes/ScreenContextData.html":{}}}],["context.ts:22",{"_index":259,"title":{},"body":{"classes/ScreenContextData.html":{}}}],["context.ts:39",{"_index":187,"title":{},"body":{"injectables/ScreenContext.html":{}}}],["context.ts:64",{"_index":195,"title":{},"body":{"injectables/ScreenContext.html":{}}}],["context.ts:71",{"_index":202,"title":{},"body":{"injectables/ScreenContext.html":{}}}],["context.ts:78",{"_index":204,"title":{},"body":{"injectables/ScreenContext.html":{}}}],["context.ts:85",{"_index":190,"title":{},"body":{"injectables/ScreenContext.html":{}}}],["context.ts:92",{"_index":188,"title":{},"body":{"injectables/ScreenContext.html":{}}}],["contract",{"_index":514,"title":{},"body":{"license.html":{}}}],["copies",{"_index":482,"title":{},"body":{"license.html":{}}}],["copy",{"_index":465,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":453,"title":{},"body":{"license.html":{}}}],["creating",{"_index":266,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["css",{"_index":269,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["current",{"_index":54,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{}}}],["currentcontext",{"_index":226,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["currently",{"_index":348,"title":{},"body":{"directives/WindowDirective.html":{},"index.html":{}}}],["damages",{"_index":510,"title":{},"body":{"license.html":{}}}],["deal",{"_index":469,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":519,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/FoldableModule.html":{},"overview.html":{}}}],["declare",{"_index":218,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["default",{"_index":164,"title":{},"body":{"directives/IfSpanDirective.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":88,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["defines",{"_index":96,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"miscellaneous/enumerations.html":{}}}],["demo",{"_index":400,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/FoldableModule.html":{},"overview.html":{}}}],["description",{"_index":23,"title":{},"body":{"modules/FoldableModule.html":{},"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["design",{"_index":276,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["destroyed",{"_index":229,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["detect",{"_index":535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detected",{"_index":286,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"miscellaneous/enumerations.html":{}}}],["device",{"_index":205,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{},"index.html":{}}}],["device's",{"_index":182,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["devices",{"_index":32,"title":{},"body":{"modules/FoldableModule.html":{},"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"index.html":{}}}],["different",{"_index":273,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["directive",{"_index":48,"title":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["directives",{"_index":49,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"index.html":{},"overview.html":{}}}],["display",{"_index":306,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["displayed",{"_index":278,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"index.html":{}}}],["distribute",{"_index":478,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":450,"title":{},"body":{"index.html":{},"license.html":{}}}],["domrect",{"_index":200,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["dual",{"_index":394,"title":{},"body":{"index.html":{}}}],["duo",{"_index":398,"title":{},"body":{"index.html":{}}}],["edge",{"_index":419,"title":{},"body":{"index.html":{}}}],["element",{"_index":356,"title":{},"body":{"directives/WindowDirective.html":{}}}],["elsetemplateref",{"_index":134,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["elseviewref",{"_index":136,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["embeddedviewref",{"_index":113,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["emitting",{"_index":192,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["emulation",{"_index":415,"title":{},"body":{"index.html":{}}}],["enable",{"_index":426,"title":{},"body":{"index.html":{}}}],["enum",{"_index":124,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{}}}],["enumerations",{"_index":384,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env(fold",{"_index":322,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["error('segment",{"_index":377,"title":{},"body":{"directives/WindowDirective.html":{}}}],["evaluates",{"_index":101,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["event",{"_index":505,"title":{},"body":{"license.html":{}}}],["example",{"_index":69,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"index.html":{}}}],["except",{"_index":62,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["existing",{"_index":406,"title":{},"body":{"index.html":{}}}],["experiences",{"_index":395,"title":{},"body":{"index.html":{}}}],["experimental",{"_index":402,"title":{},"body":{"index.html":{}}}],["explore",{"_index":405,"title":{},"body":{"index.html":{}}}],["export",{"_index":43,"title":{},"body":{"modules/FoldableModule.html":{},"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{},"index.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/FoldableModule.html":{},"overview.html":{}}}],["express",{"_index":496,"title":{},"body":{"license.html":{}}}],["expression",{"_index":66,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["false",{"_index":102,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["fdifspan",{"_index":75,"title":{},"body":{"directives/IfSpanDirective.html":{},"index.html":{}}}],["fdifspan(condition",{"_index":139,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["fdifspanelse",{"_index":80,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["fdifspanelse(templateref",{"_index":145,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["fdifspanthen",{"_index":81,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["fdifspanthen(templateref",{"_index":142,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["fdsplitlayout",{"_index":281,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"index.html":{}}}],["fdsplitlayout(mode",{"_index":330,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["fdwindow",{"_index":358,"title":{},"body":{"directives/WindowDirective.html":{},"index.html":{}}}],["fdwindow(segment",{"_index":374,"title":{},"body":{"directives/WindowDirective.html":{}}}],["feature",{"_index":416,"title":{},"body":{"index.html":{}}}],["file",{"_index":21,"title":{},"body":{"modules/FoldableModule.html":{},"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{}}}],["files",{"_index":468,"title":{},"body":{"license.html":{}}}],["first",{"_index":279,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"index.html":{}}}],["fitness",{"_index":501,"title":{},"body":{"license.html":{}}}],["fix",{"_index":527,"title":{},"body":{"todo.html":{}}}],["flags",{"_index":425,"title":{},"body":{"index.html":{}}}],["flex",{"_index":295,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"miscellaneous/enumerations.html":{}}}],["flexdirection",{"_index":311,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["fold",{"_index":125,"title":{},"body":{"directives/IfSpanDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["foldable",{"_index":391,"title":{},"body":{"index.html":{}}}],["foldableimport",{"_index":437,"title":{},"body":{"index.html":{}}}],["foldablemodule",{"_index":1,"title":{"modules/FoldableModule.html":{}},"body":{"modules/FoldableModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["follow",{"_index":427,"title":{},"body":{"index.html":{}}}],["following",{"_index":487,"title":{},"body":{"license.html":{}}}],["free",{"_index":461,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":208,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["fromevent(this.mediaquery",{"_index":234,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["full",{"_index":449,"title":{},"body":{"index.html":{}}}],["function",{"_index":341,"title":{},"body":{"interfaces/Window.html":{}}}],["furnished",{"_index":485,"title":{},"body":{"license.html":{}}}],["getismultiscreen",{"_index":203,"title":{},"body":{"injectables/ScreenContext.html":{}}}],["getlayoutmode",{"_index":288,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["gets",{"_index":189,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["getscreencontext",{"_index":247,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["getscreenspanning",{"_index":201,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["getting",{"_index":380,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getwindowsegments",{"_index":194,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["global",{"_index":219,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["google",{"_index":420,"title":{},"body":{"index.html":{}}}],["granted",{"_index":460,"title":{},"body":{"license.html":{}}}],["grid",{"_index":296,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"miscellaneous/enumerations.html":{}}}],["gridarea",{"_index":372,"title":{},"body":{"directives/WindowDirective.html":{}}}],["gridautoflow",{"_index":320,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["gridtemplateareas",{"_index":317,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["gridtemplatecolumns",{"_index":315,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["gridtemplaterows",{"_index":324,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["height",{"_index":309,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["help",{"_index":26,"title":{},"body":{"modules/FoldableModule.html":{},"index.html":{}}}],["here",{"_index":429,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":459,"title":{},"body":{"license.html":{}}}],["holders",{"_index":507,"title":{},"body":{"license.html":{}}}],["holds",{"_index":221,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["horizontal",{"_index":127,"title":{},"body":{"directives/IfSpanDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":365,"title":{},"body":{"directives/WindowDirective.html":{}}}],["hostbinding",{"_index":290,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["hostbinding('style",{"_index":333,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["ifspandirective",{"_index":12,"title":{"directives/IfSpanDirective.html":{}},"body":{"modules/FoldableModule.html":{},"directives/IfSpanDirective.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["ignore",{"_index":106,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["ignored",{"_index":241,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["implements",{"_index":67,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{}}}],["implied",{"_index":497,"title":{},"body":{"license.html":{}}}],["import",{"_index":35,"title":{},"body":{"modules/FoldableModule.html":{},"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{},"index.html":{}}}],["imports",{"_index":438,"title":{},"body":{"index.html":{}}}],["included",{"_index":491,"title":{},"body":{"license.html":{}}}],["including",{"_index":472,"title":{},"body":{"license.html":{}}}],["index",{"_index":76,"title":{"index.html":{}},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":19,"title":{},"body":{"modules/FoldableModule.html":{},"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{}}}],["information",{"_index":222,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["injectable",{"_index":173,"title":{"injectables/ScreenContext.html":{}},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{},"overview.html":{}}}],["injectables",{"_index":174,"title":{},"body":{"injectables/ScreenContext.html":{}}}],["input",{"_index":114,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["inputs",{"_index":79,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["install",{"_index":436,"title":{},"body":{"index.html":{}}}],["instead",{"_index":64,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["instructions",{"_index":428,"title":{},"body":{"index.html":{}}}],["interface",{"_index":220,"title":{"interfaces/Window.html":{}},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{},"overview.html":{}}}],["interfaces",{"_index":340,"title":{},"body":{"interfaces/Window.html":{}}}],["ismultiscreen",{"_index":186,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{}}}],["js",{"_index":300,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["justifycontent",{"_index":307,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["kind",{"_index":495,"title":{},"body":{"license.html":{}}}],["lasorsa",{"_index":457,"title":{},"body":{"license.html":{}}}],["layout",{"_index":29,"title":{},"body":{"modules/FoldableModule.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["layout.directive",{"_index":41,"title":{},"body":{"modules/FoldableModule.html":{},"directives/WindowDirective.html":{}}}],["layout.directive.ts",{"_index":263,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"miscellaneous/enumerations.html":{}}}],["layout.directive.ts:100",{"_index":283,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["layout.directive.ts:115",{"_index":289,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["layout.directive.ts:91",{"_index":284,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["layoutmode",{"_index":282,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["layoutstyle",{"_index":329,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["layoutstyles",{"_index":303,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["layoutstyles[mode][spanning][this.segment",{"_index":379,"title":{},"body":{"directives/WindowDirective.html":{}}}],["layoutstyles[this.mode].common",{"_index":338,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["layoutstyles[this.mode][spanning",{"_index":339,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["left",{"_index":366,"title":{},"body":{"directives/WindowDirective.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/FoldableModule.html":{},"overview.html":{}}}],["liability",{"_index":511,"title":{},"body":{"license.html":{}}}],["liable",{"_index":508,"title":{},"body":{"license.html":{}}}],["lib",{"_index":529,"title":{},"body":{"todo.html":{}}}],["library",{"_index":431,"title":{},"body":{"index.html":{}}}],["license",{"_index":451,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":473,"title":{},"body":{"license.html":{}}}],["limited",{"_index":498,"title":{},"body":{"license.html":{}}}],["link",{"_index":42,"title":{},"body":{"modules/FoldableModule.html":{},"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{}}}],["list",{"_index":196,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["little",{"_index":412,"title":{},"body":{"index.html":{}}}],["live",{"_index":399,"title":{},"body":{"index.html":{}}}],["look",{"_index":298,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["ma",{"_index":299,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["map",{"_index":210,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["map((_",{"_index":237,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["match",{"_index":168,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["matchcondition",{"_index":153,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["matches",{"_index":57,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["matching",{"_index":46,"title":{},"body":{"modules/FoldableModule.html":{},"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["matchmedia",{"_index":228,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["matchmedia(singlefoldhorizontal).matches",{"_index":250,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["matchmedia(singlefoldvertical).matches",{"_index":251,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["maxheight",{"_index":373,"title":{},"body":{"directives/WindowDirective.html":{}}}],["meaning",{"_index":350,"title":{},"body":{"directives/WindowDirective.html":{}}}],["media",{"_index":216,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["mediaquery",{"_index":227,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["merchantability",{"_index":500,"title":{},"body":{"license.html":{}}}],["merge",{"_index":476,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":73,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["methods",{"_index":77,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{}}}],["microsoft",{"_index":418,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":383,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":452,"title":{},"body":{"license.html":{}}}],["mode",{"_index":56,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":475,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/FoldableModule.html":{}},"body":{"modules/FoldableModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/FoldableModule.html":{},"modules.html":{}}}],["multi",{"_index":30,"title":{},"body":{"modules/FoldableModule.html":{},"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["multiple",{"_index":206,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{}}}],["name",{"_index":91,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["new",{"_index":230,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{}}}],["ngif",{"_index":61,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["ngmodule",{"_index":36,"title":{},"body":{"modules/FoldableModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":78,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{}}}],["ngx",{"_index":390,"title":{},"body":{"index.html":{}}}],["none",{"_index":128,"title":{},"body":{"directives/IfSpanDirective.html":{},"miscellaneous/enumerations.html":{}}}],["noninfringement",{"_index":504,"title":{},"body":{"license.html":{}}}],["notice",{"_index":489,"title":{},"body":{"license.html":{}}}],["now",{"_index":424,"title":{},"body":{"index.html":{}}}],["npm",{"_index":435,"title":{},"body":{"index.html":{},"todo.html":{}}}],["null",{"_index":132,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["number",{"_index":361,"title":{},"body":{"directives/WindowDirective.html":{}}}],["observable",{"_index":191,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["obtaining",{"_index":464,"title":{},"body":{"license.html":{}}}],["ondestroy",{"_index":68,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{}}}],["optional",{"_index":93,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["orientation",{"_index":442,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":516,"title":{},"body":{"license.html":{}}}],["out",{"_index":18,"title":{},"body":{"modules/FoldableModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":523,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["param",{"_index":137,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["parameters",{"_index":90,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["parent",{"_index":264,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["particular",{"_index":502,"title":{},"body":{"license.html":{}}}],["permission",{"_index":458,"title":{},"body":{"license.html":{}}}],["permit",{"_index":483,"title":{},"body":{"license.html":{}}}],["person",{"_index":463,"title":{},"body":{"license.html":{}}}],["persons",{"_index":484,"title":{},"body":{"license.html":{}}}],["pipe(skip(1",{"_index":150,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["placed",{"_index":345,"title":{},"body":{"directives/WindowDirective.html":{}}}],["portions",{"_index":493,"title":{},"body":{"license.html":{}}}],["position",{"_index":327,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["possible",{"_index":121,"title":{},"body":{"directives/IfSpanDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["private",{"_index":130,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{}}}],["project",{"_index":403,"title":{},"body":{"index.html":{}}}],["projects/.../if",{"_index":387,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../media",{"_index":531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../screen",{"_index":385,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../split",{"_index":388,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/lib/src/core/foldable.module.ts",{"_index":22,"title":{},"body":{"modules/FoldableModule.html":{}}}],["projects/lib/src/core/if",{"_index":50,"title":{},"body":{"directives/IfSpanDirective.html":{},"miscellaneous/enumerations.html":{}}}],["projects/lib/src/core/media",{"_index":533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/lib/src/core/screen",{"_index":175,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{},"miscellaneous/enumerations.html":{}}}],["projects/lib/src/core/split",{"_index":262,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"miscellaneous/enumerations.html":{}}}],["projects/lib/src/core/window.directive.ts",{"_index":342,"title":{},"body":{"directives/WindowDirective.html":{}}}],["projects/lib/src/core/window.directive.ts:106",{"_index":362,"title":{},"body":{"directives/WindowDirective.html":{}}}],["projects/lib/src/core/window.directive.ts:109",{"_index":360,"title":{},"body":{"directives/WindowDirective.html":{}}}],["properties",{"_index":258,"title":{},"body":{"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["provided",{"_index":440,"title":{},"body":{"index.html":{},"license.html":{}}}],["providedin",{"_index":224,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/FoldableModule.html":{},"overview.html":{}}}],["publish",{"_index":477,"title":{},"body":{"license.html":{},"todo.html":{}}}],["purpose",{"_index":503,"title":{},"body":{"license.html":{}}}],["queries",{"_index":217,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["queries.ts",{"_index":532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query",{"_index":179,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":448,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":223,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["receive",{"_index":180,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{},"index.html":{}}}],["regardless",{"_index":441,"title":{},"body":{"index.html":{}}}],["relative",{"_index":328,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["rendered",{"_index":294,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"miscellaneous/enumerations.html":{}}}],["replaysubject",{"_index":209,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["replaysubject(1",{"_index":231,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["represents",{"_index":389,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requires",{"_index":417,"title":{},"body":{"index.html":{}}}],["reset",{"_index":17,"title":{},"body":{"modules/FoldableModule.html":{},"overview.html":{}}}],["responsive",{"_index":410,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":471,"title":{},"body":{"license.html":{}}}],["result",{"_index":45,"title":{},"body":{"modules/FoldableModule.html":{},"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":47,"title":{},"body":{"modules/FoldableModule.html":{},"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":157,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{}}}],["returns",{"_index":107,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["right",{"_index":368,"title":{},"body":{"directives/WindowDirective.html":{}}}],["rights",{"_index":474,"title":{},"body":{"license.html":{}}}],["root",{"_index":225,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["row",{"_index":312,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["rowgap",{"_index":325,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["rtl",{"_index":526,"title":{},"body":{"todo.html":{}}}],["rxjs",{"_index":116,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{}}}],["rxjs/operators",{"_index":118,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{}}}],["safestyle",{"_index":291,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["same",{"_index":357,"title":{},"body":{"directives/WindowDirective.html":{}}}],["screen",{"_index":31,"title":{},"body":{"modules/FoldableModule.html":{},"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["screencontext",{"_index":34,"title":{"injectables/ScreenContext.html":{}},"body":{"modules/FoldableModule.html":{},"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{},"index.html":{}}}],["screencontextdata",{"_index":183,"title":{"classes/ScreenContextData.html":{}},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{},"index.html":{}}}],["screencontextsubscription",{"_index":131,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["screens",{"_index":207,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["screenspanning",{"_index":120,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{},"miscellaneous/enumerations.html":{}}}],["screenspanning.horizontal",{"_index":161,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{}}}],["screenspanning.none",{"_index":165,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["screenspanning.vertical",{"_index":163,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{}}}],["second",{"_index":280,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"index.html":{}}}],["see",{"_index":33,"title":{},"body":{"modules/FoldableModule.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{},"index.html":{}}}],["segment",{"_index":344,"title":{},"body":{"directives/WindowDirective.html":{},"index.html":{}}}],["segment0",{"_index":318,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["segment1",{"_index":319,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["segments",{"_index":199,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["selector",{"_index":74,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["sell",{"_index":481,"title":{},"body":{"license.html":{}}}],["service",{"_index":177,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{},"index.html":{}}}],["services",{"_index":393,"title":{},"body":{"index.html":{}}}],["set",{"_index":138,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"index.html":{}}}],["setfdifspan(condition",{"_index":109,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["setfdifspanelse(templateref",{"_index":112,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["setfdifspanthen(templateref",{"_index":111,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["setfdsplitlayout(mode",{"_index":287,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["setfdwindow(segment",{"_index":364,"title":{},"body":{"directives/WindowDirective.html":{}}}],["sets",{"_index":285,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["setup",{"_index":430,"title":{},"body":{"index.html":{}}}],["shall",{"_index":490,"title":{},"body":{"license.html":{}}}],["sharereplay",{"_index":211,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["sharereplay(1",{"_index":238,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["show",{"_index":99,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["showing",{"_index":110,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["shown",{"_index":97,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["shows",{"_index":52,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["single",{"_index":72,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["singlefoldhorizontal",{"_index":214,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["singlefoldvertical",{"_index":215,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{},"miscellaneous/variables.html":{}}}],["skip",{"_index":117,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["software",{"_index":466,"title":{},"body":{"license.html":{}}}],["source",{"_index":20,"title":{},"body":{"modules/FoldableModule.html":{},"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{},"index.html":{}}}],["space",{"_index":308,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["span",{"_index":100,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["span.directive",{"_index":38,"title":{},"body":{"modules/FoldableModule.html":{}}}],["span.directive.ts",{"_index":51,"title":{},"body":{"directives/IfSpanDirective.html":{},"miscellaneous/enumerations.html":{}}}],["span.directive.ts:58",{"_index":94,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["span.directive.ts:67",{"_index":103,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["span.directive.ts:75",{"_index":98,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["span.directive.ts:79",{"_index":89,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["span.directive.ts:94",{"_index":105,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["spancondition",{"_index":59,"title":{},"body":{"directives/IfSpanDirective.html":{},"miscellaneous/enumerations.html":{}}}],["spancondition.horizontal",{"_index":159,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["spancondition.multi",{"_index":156,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["spancondition.vertical",{"_index":162,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["spanning",{"_index":55,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["spanning.ts",{"_index":386,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["specified",{"_index":58,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["specify",{"_index":343,"title":{},"body":{"directives/WindowDirective.html":{}}}],["split",{"_index":40,"title":{},"body":{"modules/FoldableModule.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"miscellaneous/enumerations.html":{}}}],["splitlayout",{"_index":359,"title":{},"body":{"directives/WindowDirective.html":{}}}],["splitlayoutdirective",{"_index":14,"title":{"directives/SplitLayoutDirective.html":{}},"body":{"modules/FoldableModule.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"overview.html":{}}}],["splitlayoutmode",{"_index":274,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"miscellaneous/enumerations.html":{}}}],["splitlayoutmode.absolute",{"_index":326,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["splitlayoutmode.flex",{"_index":304,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["splitlayoutmode.grid",{"_index":314,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["started",{"_index":381,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["startwith",{"_index":212,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["startwith(1",{"_index":236,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["status",{"_index":401,"title":{},"body":{"index.html":{}}}],["string",{"_index":534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["style",{"_index":334,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["subject",{"_index":486,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":479,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":151,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["subscribe(context",{"_index":445,"title":{},"body":{"index.html":{}}}],["subscription",{"_index":115,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["substantial",{"_index":492,"title":{},"body":{"license.html":{}}}],["such",{"_index":396,"title":{},"body":{"index.html":{}}}],["suit",{"_index":275,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["support",{"_index":520,"title":{},"body":{"modules.html":{},"todo.html":{}}}],["supported",{"_index":349,"title":{},"body":{"directives/WindowDirective.html":{}}}],["surface",{"_index":397,"title":{},"body":{"index.html":{}}}],["svg",{"_index":521,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":154,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["takeuntil",{"_index":213,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["takeuntil(this.destroyed",{"_index":239,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["target",{"_index":363,"title":{},"body":{"directives/WindowDirective.html":{}}}],["template",{"_index":53,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["templateref",{"_index":87,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["test",{"_index":414,"title":{},"body":{"index.html":{}}}],["test/build",{"_index":528,"title":{},"body":{"todo.html":{}}}],["text",{"_index":70,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["thentemplateref",{"_index":133,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["thenviewref",{"_index":135,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["this.condition",{"_index":140,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["this.currentcontext",{"_index":232,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["this.currentcontext.ismultiscreen",{"_index":246,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["this.currentcontext.screenspanning",{"_index":245,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["this.currentcontext.windowsegments",{"_index":244,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["this.destroyed$.complete",{"_index":243,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["this.destroyed$.next",{"_index":242,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["this.elsetemplateref",{"_index":146,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["this.elseviewref",{"_index":171,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["this.getscreencontext",{"_index":233,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["this.getscreenspanning",{"_index":249,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["this.getwindowsegments",{"_index":248,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["this.layoutstyle",{"_index":335,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["this.matchcondition",{"_index":169,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["this.mode",{"_index":331,"title":{},"body":{"directives/SplitLayoutDirective.html":{}}}],["this.screencontext",{"_index":148,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{},"index.html":{}}}],["this.screencontext$.subscribe",{"_index":240,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["this.screencontext.ismultiscreen",{"_index":158,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["this.screencontext.screenspanning",{"_index":160,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["this.screencontextsubscription",{"_index":147,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["this.screencontextsubscription.unsubscribe",{"_index":152,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["this.segment",{"_index":375,"title":{},"body":{"directives/WindowDirective.html":{}}}],["this.splitlayout.layoutmode",{"_index":378,"title":{},"body":{"directives/WindowDirective.html":{}}}],["this.thentemplateref",{"_index":143,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["this.thenviewref",{"_index":144,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["this.updatestyle",{"_index":332,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["this.updateview",{"_index":141,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["this.viewcontainer.clear",{"_index":170,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["this.viewcontainer.createembeddedview",{"_index":172,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["throw",{"_index":376,"title":{},"body":{"directives/WindowDirective.html":{}}}],["todo",{"_index":525,"title":{"todo.html":{}},"body":{}}],["top",{"_index":369,"title":{},"body":{"directives/WindowDirective.html":{}}}],["tort",{"_index":515,"title":{},"body":{"license.html":{}}}],["true",{"_index":104,"title":{},"body":{"directives/IfSpanDirective.html":{},"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["two",{"_index":347,"title":{},"body":{"directives/WindowDirective.html":{}}}],["type",{"_index":92,"title":{},"body":{"directives/IfSpanDirective.html":{},"classes/ScreenContextData.html":{},"directives/SplitLayoutDirective.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{},"miscellaneous/variables.html":{}}}],["uis",{"_index":411,"title":{},"body":{"index.html":{}}}],["up",{"_index":346,"title":{},"body":{"directives/WindowDirective.html":{}}}],["updates",{"_index":181,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{},"index.html":{}}}],["updatestyle",{"_index":337,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["updateview",{"_index":166,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["usage",{"_index":432,"title":{},"body":{"index.html":{}}}],["use",{"_index":123,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":267,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":443,"title":{},"body":{"index.html":{}}}],["utilities",{"_index":25,"title":{},"body":{"modules/FoldableModule.html":{}}}],["value",{"_index":351,"title":{},"body":{"directives/WindowDirective.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":530,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["versions",{"_index":423,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":126,"title":{},"body":{"directives/IfSpanDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["viewcontainer",{"_index":85,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["viewcontainerref",{"_index":86,"title":{},"body":{"directives/IfSpanDirective.html":{}}}],["visible",{"_index":71,"title":{},"body":{"directives/IfSpanDirective.html":{},"index.html":{}}}],["void",{"_index":108,"title":{},"body":{"directives/IfSpanDirective.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["warranties",{"_index":499,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":494,"title":{},"body":{"license.html":{}}}],["web",{"_index":407,"title":{},"body":{"index.html":{}}}],["whether",{"_index":512,"title":{},"body":{"license.html":{}}}],["width",{"_index":323,"title":{},"body":{"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{}}}],["window",{"_index":198,"title":{"interfaces/Window.html":{}},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{},"directives/WindowDirective.html":{},"index.html":{}}}],["window.directive",{"_index":39,"title":{},"body":{"modules/FoldableModule.html":{}}}],["window.getwindowsegments",{"_index":256,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["window.innerheight",{"_index":255,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["window.innerwidth",{"_index":254,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["window.pagexoffset",{"_index":252,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["window.pageyoffset",{"_index":253,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["windowdirective",{"_index":15,"title":{"directives/WindowDirective.html":{}},"body":{"modules/FoldableModule.html":{},"directives/SplitLayoutDirective.html":{},"directives/WindowDirective.html":{},"overview.html":{}}}],["windowsegments",{"_index":185,"title":{},"body":{"injectables/ScreenContext.html":{},"classes/ScreenContextData.html":{},"interfaces/Window.html":{}}}],["within",{"_index":354,"title":{},"body":{"directives/WindowDirective.html":{}}}],["without",{"_index":470,"title":{},"body":{"license.html":{}}}],["yohan",{"_index":456,"title":{},"body":{"license.html":{}}}],["zoom",{"_index":16,"title":{},"body":{"modules/FoldableModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/FoldableModule.html":{"url":"modules/FoldableModule.html","title":"module - FoldableModule","body":"\n                   \n\n\n\n\n    Modules\n    FoldableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FoldableModule\n\n\n\ncluster_FoldableModule_declarations\n\n\n\ncluster_FoldableModule_exports\n\n\n\n\nIfSpanDirective\n\nIfSpanDirective\n\n\n\nFoldableModule\n\nFoldableModule\n\nFoldableModule -->\n\nIfSpanDirective->FoldableModule\n\n\n\n\n\nSplitLayoutDirective\n\nSplitLayoutDirective\n\nFoldableModule -->\n\nSplitLayoutDirective->FoldableModule\n\n\n\n\n\nWindowDirective\n\nWindowDirective\n\nFoldableModule -->\n\nWindowDirective->FoldableModule\n\n\n\n\n\nIfSpanDirective \n\nIfSpanDirective \n\nIfSpanDirective  -->\n\nFoldableModule->IfSpanDirective \n\n\n\n\n\nSplitLayoutDirective \n\nSplitLayoutDirective \n\nSplitLayoutDirective  -->\n\nFoldableModule->SplitLayoutDirective \n\n\n\n\n\nWindowDirective \n\nWindowDirective \n\nWindowDirective  -->\n\nFoldableModule->WindowDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/lib/src/core/foldable.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module contains utilities to help you build your app layout for multi screen devices.\nSee SplitLayoutDirective,\nWindowDirective,\nIfSpanDirective,\nScreenContext\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IfSpanDirective\n                        \n                        \n                            SplitLayoutDirective\n                        \n                        \n                            WindowDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IfSpanDirective\n                        \n                        \n                            SplitLayoutDirective\n                        \n                        \n                            WindowDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { IfSpanDirective } from './if-span.directive';\nimport { WindowDirective } from './window.directive';\nimport { SplitLayoutDirective } from './split-layout.directive';\n\n/**\n * This module contains utilities to help you build your app layout for multi screen devices.\n *\n * See {@link SplitLayoutDirective},\n * {@link WindowDirective},\n * {@link IfSpanDirective},\n * {@link ScreenContext}\n */\n@NgModule({\n  declarations: [IfSpanDirective, WindowDirective, SplitLayoutDirective],\n  exports: [IfSpanDirective, WindowDirective, SplitLayoutDirective],\n})\nexport class FoldableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/IfSpanDirective.html":{"url":"directives/IfSpanDirective.html","title":"directive - IfSpanDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  IfSpanDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/core/if-span.directive.ts\n        \n\n            \n                Description\n            \n            \n                Shows template only if the current screen spanning mode matches\nspecified SpanCondition.\nBehaves like ngIf, except that it accepts a SpanCondition instead of\na boolean expression.\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n            \n\n            \n                Example\n            \n            \n                        \n                            This text will only be visible on multi screen devices.\n                        \n                        \n                            This text will only be visible on single screen devices.\nThis text will only be visible on multi screen devices.\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [fdIfSpan]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fdIfSpan\n                            \n                            \n                                fdIfSpanElse\n                            \n                            \n                                fdIfSpanThen\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fdIfSpan\n                                \n                                \n                                    fdIfSpanThen\n                                \n                                \n                                    fdIfSpanElse\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(screenContext: ScreenContext, viewContainer: ViewContainerRef, templateRef: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/core/if-span.directive.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        screenContext\n                                                  \n                                                        \n                                                                        ScreenContext\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        fdIfSpan\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/core/if-span.directive.ts:58\n                            \n                        \n                \n                    \n                        The spanning mode condition that defines if the template should be shown.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fdIfSpanElse\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/core/if-span.directive.ts:75\n                            \n                        \n                \n                    \n                        A template to show if the span condition evaluates to false. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fdIfSpanThen\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/core/if-span.directive.ts:67\n                            \n                        \n                \n                    \n                        A template to show if the span condition evaluates to true. \n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/core/if-span.directive.ts:94\n                \n            \n\n\n            \n                \n                    ignore \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fdIfSpan\n                    \n                \n\n\n                \n                    \n                        setfdIfSpan(condition)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/core/if-span.directive.ts:58\n                                \n                            \n                    \n                        \n                                The spanning mode condition that defines if the template should be shown.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            condition\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The spanning mode condition for showing the template.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        fdIfSpanThen\n                    \n                \n\n\n                \n                    \n                        setfdIfSpanThen(templateRef)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/core/if-span.directive.ts:67\n                                \n                            \n                    \n                        \n                                A template to show if the span condition evaluates to true. \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            templateRef\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        fdIfSpanElse\n                    \n                \n\n\n                \n                    \n                        setfdIfSpanElse(templateRef)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/core/if-span.directive.ts:75\n                                \n                            \n                    \n                        \n                                A template to show if the span condition evaluates to false. \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            templateRef\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  Directive,\n  EmbeddedViewRef,\n  Input,\n  OnDestroy,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { skip } from 'rxjs/operators';\nimport { ScreenContext } from './screen-context';\nimport { ScreenSpanning } from './screen-spanning';\n\n/**\n * Possible spanning mode conditions for use with {@link IfSpanDirective}.\n */\nexport enum SpanCondition {\n  /** Screen spanning mode is single fold vertical. */\n  Vertical = 'fold-vertical',\n  /** Screen spanning mode is single fold horizontal. */\n  Horizontal = 'fold-horizontal',\n  /** No screen spanning (single screen mode). */\n  None = 'none',\n  /** Any screen spanning mode is active (multi screen mode). */\n  Multi = 'multi',\n}\n\n/**\n * Shows template only if the current screen spanning mode matches\n * specified {@link SpanCondition}.\n *\n * Behaves like `ngIf`, except that it accepts a {@link SpanCondition} instead of\n * a boolean expression.\n *\n * @example\n * This text will only be visible on multi screen devices.\n * @example\n * This text will only be visible on single screen devices.\n * This text will only be visible on multi screen devices.\n */\n@Directive({\n  selector: '[fdIfSpan]',\n})\nexport class IfSpanDirective implements OnDestroy {\n  private screenContextSubscription: Subscription = null;\n  private condition: SpanCondition;\n  private thenTemplateRef: TemplateRef | null = null;\n  private elseTemplateRef: TemplateRef | null = null;\n  private thenViewRef: EmbeddedViewRef | null = null;\n  private elseViewRef: EmbeddedViewRef | null = null;\n\n  /**\n   * The spanning mode condition that defines if the template should be shown.\n   *\n   * @param condition The spanning mode condition for showing the template.\n   */\n  @Input()\n  set fdIfSpan(condition: SpanCondition) {\n    if (condition !== this.condition) {\n      this.condition = condition;\n      this.updateView();\n    }\n  }\n\n  /** A template to show if the span condition evaluates to true. */\n  @Input()\n  set fdIfSpanThen(templateRef: TemplateRef | null) {\n    this.thenTemplateRef = templateRef;\n    this.thenViewRef = null;\n    this.updateView();\n  }\n\n  /** A template to show if the span condition evaluates to false. */\n  @Input()\n  set fdIfSpanElse(templateRef: TemplateRef | null) {\n    this.elseTemplateRef = templateRef;\n    this.thenViewRef = null;\n    this.updateView();\n  }\n\n  constructor(\n    private screenContext: ScreenContext,\n    private viewContainer: ViewContainerRef,\n    templateRef: TemplateRef\n  ) {\n    this.thenTemplateRef = templateRef;\n    this.screenContextSubscription = this.screenContext\n      .asObservable()\n      .pipe(skip(1))\n      .subscribe(() => this.updateView());\n  }\n\n  /** ignore */\n  ngOnDestroy() {\n    if (this.screenContextSubscription !== null) {\n      this.screenContextSubscription.unsubscribe();\n    }\n  }\n\n  private matchCondition(): boolean {\n    switch (this.condition) {\n      case SpanCondition.Multi:\n        return this.screenContext.isMultiScreen;\n      case SpanCondition.Horizontal:\n        return this.screenContext.screenSpanning === ScreenSpanning.Horizontal;\n      case SpanCondition.Vertical:\n        return this.screenContext.screenSpanning === ScreenSpanning.Vertical;\n      default:\n        return this.screenContext.screenSpanning === ScreenSpanning.None;\n    }\n  }\n\n  private updateView() {\n    const match = this.matchCondition();\n\n    if (match) {\n      if (!this.thenViewRef) {\n        this.viewContainer.clear();\n        this.elseViewRef = null;\n        if (this.thenTemplateRef) {\n          this.thenViewRef = this.viewContainer.createEmbeddedView(\n            this.thenTemplateRef\n          );\n        }\n      }\n    } else {\n      if (!this.elseViewRef) {\n        this.viewContainer.clear();\n        this.thenViewRef = null;\n        if (this.elseTemplateRef) {\n          this.elseViewRef = this.viewContainer.createEmbeddedView(\n            this.elseTemplateRef\n          );\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScreenContext.html":{"url":"injectables/ScreenContext.html","title":"injectable - ScreenContext","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ScreenContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/core/screen-context.ts\n        \n\n            \n                Description\n            \n            \n                This service allows to query and receive updates about current device's screen context.\nSee ScreenContextData\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                asObject\n                            \n                            \n                                asObservable\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    windowSegments\n                                \n                                \n                                    screenSpanning\n                                \n                                \n                                    isMultiScreen\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/core/screen-context.ts:39\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asObject\n                        \n                        \n                    \n                \n            \n            \n                \nasObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/core/screen-context.ts:92\n                \n            \n\n\n            \n                \n                    Gets the current screen context.\n\n\n                    \n                        Returns :         ScreenContextData\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asObservable\n                        \n                        \n                    \n                \n            \n            \n                \nasObservable()\n                \n            \n\n\n            \n                \n                    Defined in projects/lib/src/core/screen-context.ts:85\n                \n            \n\n\n            \n                \n                    Gets an observable emitting when the screen context changes.\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        windowSegments\n                    \n                \n\n                \n                    \n                        getwindowSegments()\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/core/screen-context.ts:64\n                                \n                            \n                    \n                        \n                                The list of available window segments.\n\n\n                                \n                                    Returns :     DOMRect[]\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        screenSpanning\n                    \n                \n\n                \n                    \n                        getscreenSpanning()\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/core/screen-context.ts:71\n                                \n                            \n                    \n                        \n                                The current screen spanning mode.\n\n\n                                \n                                    Returns :         ScreenSpanning\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isMultiScreen\n                    \n                \n\n                \n                    \n                        getisMultiScreen()\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/core/screen-context.ts:78\n                                \n                            \n                    \n                        \n                                True is current device have multiple screens available.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { fromEvent, Observable, ReplaySubject } from 'rxjs';\nimport { map, shareReplay, startWith, takeUntil } from 'rxjs/operators';\nimport { singleFoldHorizontal, singleFoldVertical } from './media-queries';\nimport { ScreenSpanning } from './screen-spanning';\n\ndeclare global {\n  interface Window {\n    getWindowSegments: () => DOMRect[];\n  }\n}\n\n/**\n * Holds information about the device screen context.\n */\nexport class ScreenContextData {\n  /** The list of available window segments. */\n  readonly windowSegments: DOMRect[];\n  /** The current screen spanning mode. */\n  readonly screenSpanning: ScreenSpanning;\n  /** True is current device have multiple screens available. */\n  readonly isMultiScreen: boolean;\n}\n\n/**\n * This service allows to query and receive updates about current device's screen context.\n *\n * See {@link ScreenContextData}\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScreenContext implements ScreenContextData, OnDestroy {\n  private currentContext: ScreenContextData;\n  private mediaQuery = matchMedia(\n    `${singleFoldHorizontal}, ${singleFoldVertical}`\n  );\n  private screenContext$: Observable;\n  private destroyed$: ReplaySubject = new ReplaySubject(1);\n\n  constructor() {\n    this.currentContext = this.getScreenContext();\n    this.screenContext$ = fromEvent(this.mediaQuery, 'change').pipe(\n      startWith(1),\n      map((_) => {\n        this.currentContext = this.getScreenContext();\n        return this.currentContext;\n      }),\n      shareReplay(1),\n      takeUntil(this.destroyed$)\n    );\n    this.screenContext$.subscribe();\n  }\n\n  /** @ignored */\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  /**\n   * The list of available window segments.\n   */\n  get windowSegments(): DOMRect[] {\n    return this.currentContext.windowSegments;\n  }\n\n  /**\n   * The current screen spanning mode.\n   */\n  get screenSpanning(): ScreenSpanning {\n    return this.currentContext.screenSpanning;\n  }\n\n  /**\n   * True is current device have multiple screens available.\n   */\n  get isMultiScreen(): boolean {\n    return this.currentContext.isMultiScreen;\n  }\n\n  /**\n   * Gets an observable emitting when the screen context changes.\n   */\n  asObservable(): Observable {\n    return this.screenContext$;\n  }\n\n  /**\n   * Gets the current screen context.\n   */\n  asObject(): ScreenContextData {\n    return this.currentContext;\n  }\n\n  private getScreenContext(): ScreenContextData {\n    const windowSegments = this.getWindowSegments();\n    const screenSpanning = this.getScreenSpanning();\n    return {\n      windowSegments,\n      screenSpanning,\n      isMultiScreen: screenSpanning !== ScreenSpanning.None,\n    };\n  }\n\n  private getScreenSpanning(): ScreenSpanning {\n    if (matchMedia(singleFoldHorizontal).matches) {\n      return ScreenSpanning.Horizontal;\n    } else if (matchMedia(singleFoldVertical).matches) {\n      return ScreenSpanning.Vertical;\n    }\n    return ScreenSpanning.None;\n  }\n\n  private getWindowSegments() {\n    if (!('getWindowSegments' in window)) {\n      return [\n        new DOMRect(\n          window.pageXOffset,\n          window.pageYOffset,\n          window.innerWidth,\n          window.innerHeight\n        ),\n      ];\n    }\n    return window.getWindowSegments();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScreenContextData.html":{"url":"classes/ScreenContextData.html","title":"class - ScreenContextData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScreenContextData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/core/screen-context.ts\n        \n\n            \n                Description\n            \n            \n                Holds information about the device screen context.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isMultiScreen\n                            \n                            \n                                    Readonly\n                                screenSpanning\n                            \n                            \n                                    Readonly\n                                windowSegments\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isMultiScreen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/core/screen-context.ts:22\n                            \n                        \n\n                \n                    \n                        True is current device have multiple screens available. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            screenSpanning\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ScreenSpanning\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/core/screen-context.ts:20\n                            \n                        \n\n                \n                    \n                        The current screen spanning mode. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            windowSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DOMRect[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/lib/src/core/screen-context.ts:18\n                            \n                        \n\n                \n                    \n                        The list of available window segments. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { fromEvent, Observable, ReplaySubject } from 'rxjs';\nimport { map, shareReplay, startWith, takeUntil } from 'rxjs/operators';\nimport { singleFoldHorizontal, singleFoldVertical } from './media-queries';\nimport { ScreenSpanning } from './screen-spanning';\n\ndeclare global {\n  interface Window {\n    getWindowSegments: () => DOMRect[];\n  }\n}\n\n/**\n * Holds information about the device screen context.\n */\nexport class ScreenContextData {\n  /** The list of available window segments. */\n  readonly windowSegments: DOMRect[];\n  /** The current screen spanning mode. */\n  readonly screenSpanning: ScreenSpanning;\n  /** True is current device have multiple screens available. */\n  readonly isMultiScreen: boolean;\n}\n\n/**\n * This service allows to query and receive updates about current device's screen context.\n *\n * See {@link ScreenContextData}\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScreenContext implements ScreenContextData, OnDestroy {\n  private currentContext: ScreenContextData;\n  private mediaQuery = matchMedia(\n    `${singleFoldHorizontal}, ${singleFoldVertical}`\n  );\n  private screenContext$: Observable;\n  private destroyed$: ReplaySubject = new ReplaySubject(1);\n\n  constructor() {\n    this.currentContext = this.getScreenContext();\n    this.screenContext$ = fromEvent(this.mediaQuery, 'change').pipe(\n      startWith(1),\n      map((_) => {\n        this.currentContext = this.getScreenContext();\n        return this.currentContext;\n      }),\n      shareReplay(1),\n      takeUntil(this.destroyed$)\n    );\n    this.screenContext$.subscribe();\n  }\n\n  /** @ignored */\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  /**\n   * The list of available window segments.\n   */\n  get windowSegments(): DOMRect[] {\n    return this.currentContext.windowSegments;\n  }\n\n  /**\n   * The current screen spanning mode.\n   */\n  get screenSpanning(): ScreenSpanning {\n    return this.currentContext.screenSpanning;\n  }\n\n  /**\n   * True is current device have multiple screens available.\n   */\n  get isMultiScreen(): boolean {\n    return this.currentContext.isMultiScreen;\n  }\n\n  /**\n   * Gets an observable emitting when the screen context changes.\n   */\n  asObservable(): Observable {\n    return this.screenContext$;\n  }\n\n  /**\n   * Gets the current screen context.\n   */\n  asObject(): ScreenContextData {\n    return this.currentContext;\n  }\n\n  private getScreenContext(): ScreenContextData {\n    const windowSegments = this.getWindowSegments();\n    const screenSpanning = this.getScreenSpanning();\n    return {\n      windowSegments,\n      screenSpanning,\n      isMultiScreen: screenSpanning !== ScreenSpanning.None,\n    };\n  }\n\n  private getScreenSpanning(): ScreenSpanning {\n    if (matchMedia(singleFoldHorizontal).matches) {\n      return ScreenSpanning.Horizontal;\n    } else if (matchMedia(singleFoldVertical).matches) {\n      return ScreenSpanning.Vertical;\n    }\n    return ScreenSpanning.None;\n  }\n\n  private getWindowSegments() {\n    if (!('getWindowSegments' in window)) {\n      return [\n        new DOMRect(\n          window.pageXOffset,\n          window.pageYOffset,\n          window.innerWidth,\n          window.innerHeight\n        ),\n      ];\n    }\n    return window.getWindowSegments();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SplitLayoutDirective.html":{"url":"directives/SplitLayoutDirective.html","title":"directive - SplitLayoutDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SplitLayoutDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/core/split-layout.directive.ts\n        \n\n            \n                Description\n            \n            \n                Defines a parent layout container for creating a split layout on multi screen devices.\nWhen used on a single screen device, no layout change (CSS) is added.\nYou can choose between different SplitLayoutMode to suit your design.\nThis directive should be used along with WindowDirective.\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n            \n\n            \n                Example\n            \n            \n                        \n                            \n  Will be displayed on first screen\n  Will be displayed on second screen (if available)\n\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [fdSplitLayout]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fdSplitLayout\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fdSplitLayout\n                                \n                                \n                                    layoutMode\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(screenContext: ScreenContext)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/core/split-layout.directive.ts:100\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        screenContext\n                                                  \n                                                        \n                                                                        ScreenContext\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        fdSplitLayout\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/core/split-layout.directive.ts:91\n                            \n                        \n                \n                    \n                        Sets the current split layout mode to use when multi screen is detected.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fdSplitLayout\n                    \n                \n\n\n                \n                    \n                        setfdSplitLayout(mode)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/core/split-layout.directive.ts:91\n                                \n                            \n                    \n                        \n                                Sets the current split layout mode to use when multi screen is detected.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            mode\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The split layout mode to use.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        layoutMode\n                    \n                \n\n                \n                    \n                        getlayoutMode()\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/core/split-layout.directive.ts:115\n                                \n                            \n                    \n                        \n                                The current split layout mode to use when multi screen is detected.\n\n\n                                \n                                \n                                \n                                    Returns :         SplitLayoutMode\n\n                                \n                        \n                    \n\n            \n        \n\n\n    \n\n\n    \n        import { Directive, HostBinding, Input, OnDestroy } from '@angular/core';\nimport { SafeStyle } from '@angular/platform-browser';\nimport { Subscription } from 'rxjs';\nimport { skip } from 'rxjs/operators';\nimport { ScreenContext } from './screen-context';\nimport { ScreenSpanning } from './screen-spanning';\n\n/**\n * Defines how the split layout container should be rendered when multi screen\n * is detected.\n */\nexport enum SplitLayoutMode {\n  Flex = 'flex',\n  Grid = 'grid',\n  Absolute = 'absolute',\n}\n\n/**\n * Look 'ma, CSS-in-JS with Angular! ಠ_ಠ\n *\n * @ignore\n */\nconst layoutStyles = {\n  [SplitLayoutMode.Flex]: {\n    common: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      height: '100%',\n    },\n    [ScreenSpanning.Vertical]: {\n      flexDirection: 'row',\n    },\n    [ScreenSpanning.Horizontal]: {\n      flexDirection: 'column',\n    },\n  },\n  [SplitLayoutMode.Grid]: {\n    common: {\n      display: 'grid',\n      height: '100%',\n    },\n    [ScreenSpanning.Vertical]: {\n      gridTemplateColumns: '1fr 1fr',\n      gridTemplateAreas: '\"segment0 segment1\"',\n      gridAutoFlow: 'row',\n      columnGap: 'env(fold-width)',\n    },\n    [ScreenSpanning.Horizontal]: {\n      gridTemplateRows: '1fr 1fr',\n      gridTemplateAreas: '\"segment0\" \"segment1\"',\n      gridAutoFlow: 'row',\n      rowGap: 'env(fold-height)',\n    },\n  },\n  [SplitLayoutMode.Absolute]: {\n    common: {\n      position: 'relative',\n      height: '100%',\n    },\n  },\n};\n\n/**\n * Defines a parent layout container for creating a split layout on multi screen devices.\n *\n * When used on a single screen device, no layout change (CSS) is added.\n * You can choose between different {@link SplitLayoutMode} to suit your design.\n *\n * This directive should be used along with {@link WindowDirective}.\n *\n * @example\n * \n *              Will be displayed on first screen\n *              Will be displayed on second screen (if available)\n * \n */\n@Directive({\n  selector: '[fdSplitLayout]',\n})\nexport class SplitLayoutDirective implements OnDestroy {\n  private mode: SplitLayoutMode = SplitLayoutMode.Flex;\n  private layoutStyle: SafeStyle;\n  private screenContextSubscription: Subscription = null;\n\n  /**\n   * Sets the current split layout mode to use when multi screen is detected.\n   *\n   * @param mode The split layout mode to use.\n   */\n  @Input()\n  set fdSplitLayout(mode: SplitLayoutMode) {\n    this.mode = mode || SplitLayoutMode.Flex;\n    this.updateStyle();\n  }\n\n  /** @ignore */\n  @HostBinding('style')\n  get style(): SafeStyle {\n    return this.layoutStyle;\n  }\n\n  constructor(private screenContext: ScreenContext) {\n    this.updateStyle();\n    this.screenContextSubscription = this.screenContext\n      .asObservable()\n      .pipe(skip(1))\n      .subscribe(() => this.updateStyle());\n  }\n\n  /**\n   * The current split layout mode to use when multi screen is detected.\n   *\n   * @return The current split layout mode.\n   */\n  get layoutMode(): SplitLayoutMode {\n    return this.mode;\n  }\n\n  /** @ignore */\n  ngOnDestroy() {\n    if (this.screenContextSubscription !== null) {\n      this.screenContextSubscription.unsubscribe();\n    }\n  }\n\n  private updateStyle() {\n    const isMultiScreen = this.screenContext.isMultiScreen;\n    if (isMultiScreen) {\n      const spanning = this.screenContext.screenSpanning;\n      this.layoutStyle = {\n        ...layoutStyles[this.mode].common,\n        ...layoutStyles[this.mode][spanning],\n      };\n    } else {\n      this.layoutStyle = {};\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Window.html":{"url":"interfaces/Window.html","title":"interface - Window","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Window\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/core/screen-context.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        getWindowSegments\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getWindowSegments\n                                    \n                                \n                                \n                                    \n                                        getWindowSegments:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { fromEvent, Observable, ReplaySubject } from 'rxjs';\nimport { map, shareReplay, startWith, takeUntil } from 'rxjs/operators';\nimport { singleFoldHorizontal, singleFoldVertical } from './media-queries';\nimport { ScreenSpanning } from './screen-spanning';\n\ndeclare global {\n  interface Window {\n    getWindowSegments: () => DOMRect[];\n  }\n}\n\n/**\n * Holds information about the device screen context.\n */\nexport class ScreenContextData {\n  /** The list of available window segments. */\n  readonly windowSegments: DOMRect[];\n  /** The current screen spanning mode. */\n  readonly screenSpanning: ScreenSpanning;\n  /** True is current device have multiple screens available. */\n  readonly isMultiScreen: boolean;\n}\n\n/**\n * This service allows to query and receive updates about current device's screen context.\n *\n * See {@link ScreenContextData}\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ScreenContext implements ScreenContextData, OnDestroy {\n  private currentContext: ScreenContextData;\n  private mediaQuery = matchMedia(\n    `${singleFoldHorizontal}, ${singleFoldVertical}`\n  );\n  private screenContext$: Observable;\n  private destroyed$: ReplaySubject = new ReplaySubject(1);\n\n  constructor() {\n    this.currentContext = this.getScreenContext();\n    this.screenContext$ = fromEvent(this.mediaQuery, 'change').pipe(\n      startWith(1),\n      map((_) => {\n        this.currentContext = this.getScreenContext();\n        return this.currentContext;\n      }),\n      shareReplay(1),\n      takeUntil(this.destroyed$)\n    );\n    this.screenContext$.subscribe();\n  }\n\n  /** @ignored */\n  ngOnDestroy() {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n\n  /**\n   * The list of available window segments.\n   */\n  get windowSegments(): DOMRect[] {\n    return this.currentContext.windowSegments;\n  }\n\n  /**\n   * The current screen spanning mode.\n   */\n  get screenSpanning(): ScreenSpanning {\n    return this.currentContext.screenSpanning;\n  }\n\n  /**\n   * True is current device have multiple screens available.\n   */\n  get isMultiScreen(): boolean {\n    return this.currentContext.isMultiScreen;\n  }\n\n  /**\n   * Gets an observable emitting when the screen context changes.\n   */\n  asObservable(): Observable {\n    return this.screenContext$;\n  }\n\n  /**\n   * Gets the current screen context.\n   */\n  asObject(): ScreenContextData {\n    return this.currentContext;\n  }\n\n  private getScreenContext(): ScreenContextData {\n    const windowSegments = this.getWindowSegments();\n    const screenSpanning = this.getScreenSpanning();\n    return {\n      windowSegments,\n      screenSpanning,\n      isMultiScreen: screenSpanning !== ScreenSpanning.None,\n    };\n  }\n\n  private getScreenSpanning(): ScreenSpanning {\n    if (matchMedia(singleFoldHorizontal).matches) {\n      return ScreenSpanning.Horizontal;\n    } else if (matchMedia(singleFoldVertical).matches) {\n      return ScreenSpanning.Vertical;\n    }\n    return ScreenSpanning.None;\n  }\n\n  private getWindowSegments() {\n    if (!('getWindowSegments' in window)) {\n      return [\n        new DOMRect(\n          window.pageXOffset,\n          window.pageYOffset,\n          window.innerWidth,\n          window.innerHeight\n        ),\n      ];\n    }\n    return window.getWindowSegments();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/WindowDirective.html":{"url":"directives/WindowDirective.html","title":"directive - WindowDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  WindowDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/core/window.directive.ts\n        \n\n            \n                Description\n            \n            \n                This directive is used to set specify on which window segment the container\nshould be placed on multi screen devices.\nWhen used on a single screen device, no layout change (CSS) is added.\nOnly devices with up to two screen are currently supported, meaning that the\nwindow segment value must be either 0 or 1.\nThis directive can only be used within a SplitLayoutDirective.\nIf SplitLayoutMode is set to absolute, you can assign multiple container\nelement to the same window segment.\n\n            \n\n            \n                Implements\n            \n            \n                            OnDestroy\n            \n\n            \n                Example\n            \n            \n                        \n                            \n  Will be displayed on first screen\n  Will be displayed on second screen (if available)\n\n                        \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [fdWindow]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fdWindow\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fdWindow\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(screenContext: ScreenContext, splitLayout: SplitLayoutDirective)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/core/window.directive.ts:109\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        screenContext\n                                                  \n                                                        \n                                                                        ScreenContext\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        splitLayout\n                                                  \n                                                        \n                                                                    SplitLayoutDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        fdWindow\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/lib/src/core/window.directive.ts:106\n                            \n                        \n                \n                    \n                        Sets the target window segment to display this container on when multi screen is detected.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fdWindow\n                    \n                \n\n\n                \n                    \n                        setfdWindow(segment: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/lib/src/core/window.directive.ts:106\n                                \n                            \n                    \n                        \n                                Sets the target window segment to display this container on when multi screen is detected.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            segment\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    The target window segment, must be 0 or 1.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Host, HostBinding, Input, OnDestroy } from '@angular/core';\nimport { SafeStyle } from '@angular/platform-browser';\nimport { Subscription } from 'rxjs';\nimport { skip } from 'rxjs/operators';\nimport { ScreenContext } from './screen-context';\nimport { ScreenSpanning } from './screen-spanning';\nimport {\n  SplitLayoutDirective,\n  SplitLayoutMode,\n} from './split-layout.directive';\n\n/**\n * Look 'ma, CSS-in-JS with Angular! ಠ_ಠ\n *\n * @ignore\n */\nconst layoutStyles = {\n  [SplitLayoutMode.Flex]: {\n    [ScreenSpanning.Vertical]: [\n      { flex: '0 1 env(fold-left)' },\n      { flex: '0 1 calc(100vw - env(fold-right))' },\n    ],\n    [ScreenSpanning.Horizontal]: [\n      { flex: '0 1 env(fold-top)' },\n      { flex: '0 1 calc(100vh - env(fold-bottom))' },\n    ],\n  },\n  [SplitLayoutMode.Grid]: {\n    [ScreenSpanning.Vertical]: [\n      { gridArea: 'segment0' },\n      { gridArea: 'segment1' },\n    ],\n    [ScreenSpanning.Horizontal]: [\n      { gridArea: 'segment0' },\n      { gridArea: 'segment1' },\n    ],\n  },\n  [SplitLayoutMode.Absolute]: {\n    [ScreenSpanning.Vertical]: [\n      {\n        position: 'absolute',\n        left: 0,\n        right: 'calc(100vw - env(fold-left))',\n      },\n      {\n        position: 'absolute',\n        left: 'env(fold-right)',\n        right: 0,\n      },\n    ],\n    [ScreenSpanning.Horizontal]: [\n      {\n        position: 'absolute',\n        top: 0,\n        width: '100%',\n        maxHeight: 'env(fold-top)',\n      },\n      {\n        position: 'absolute',\n        top: 'env(fold-bottom)',\n        width: '100%',\n        maxHeight: 'calc(100vh - env(fold-bottom))',\n      },\n    ],\n  },\n};\n\n/**\n * This directive is used to set specify on which window segment the container\n * should be placed on multi screen devices.\n *\n * When used on a single screen device, no layout change (CSS) is added.\n * Only devices with up to two screen are currently supported, meaning that the\n * window segment value must be either 0 or 1.\n *\n * This directive can only be used within a {@link SplitLayoutDirective}.\n * If {@link SplitLayoutMode} is set to `absolute`, you can assign multiple container\n * element to the same window segment.\n *\n * @example\n * \n *              Will be displayed on first screen\n *              Will be displayed on second screen (if available)\n * \n */\n@Directive({\n  selector: '[fdWindow]',\n})\nexport class WindowDirective implements OnDestroy {\n  private segment = -1;\n  private layoutStyle: SafeStyle;\n  private screenContextSubscription: Subscription = null;\n\n  /** @ignore */\n  @HostBinding('style')\n  get style(): SafeStyle {\n    return this.layoutStyle;\n  }\n\n  /**\n   * Sets the target window segment to display this container on when multi screen is detected.\n   *\n   * @param segment The target window segment, must be 0 or 1.\n   */\n  @Input()\n  set fdWindow(segment: number) {\n    this.segment = segment;\n    this.updateStyle();\n  }\n\n  constructor(\n    private screenContext: ScreenContext,\n    @Host() private splitLayout: SplitLayoutDirective\n  ) {\n    this.screenContextSubscription = this.screenContext\n      .asObservable()\n      .pipe(skip(1))\n      .subscribe(() => this.updateStyle());\n  }\n\n  /** @ignore */\n  ngOnDestroy() {\n    if (this.screenContextSubscription !== null) {\n      this.screenContextSubscription.unsubscribe();\n    }\n  }\n\n  private updateStyle() {\n    const isMultiScreen = this.screenContext.isMultiScreen;\n\n    if (isMultiScreen) {\n      if (this.segment  1) {\n        throw new Error('Segment index must be 0 or 1');\n      }\n      const mode = this.splitLayout.layoutMode;\n      const spanning = this.screenContext.screenSpanning;\n      this.layoutStyle = layoutStyles[mode][spanning][this.segment];\n    } else {\n      this.layoutStyle = {};\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ScreenSpanning   (projects/.../screen-spanning.ts)\n                        \n                        \n                            SpanCondition   (projects/.../if-span.directive.ts)\n                        \n                        \n                            SplitLayoutMode   (projects/.../split-layout.directive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/core/screen-spanning.ts\n    \n        \n            \n                \n                    \n                        \n                        ScreenSpanning\n                    \n                \n                    \n                        \n                            Represents the screen spanning mode.\n\n                        \n                    \n                        \n                            \n                                 Vertical\n                            \n                        \n                        \n                            \n                                Value : fold-vertical\n                            \n                        \n                        \n                            \n                                 Horizontal\n                            \n                        \n                        \n                            \n                                Value : fold-horizontal\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n            \n        \n\n    projects/lib/src/core/if-span.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        SpanCondition\n                    \n                \n                    \n                        \n                            Possible spanning mode conditions for use with IfSpanDirective.\n\n                        \n                    \n                        \n                            \n                                 Vertical\n                            \n                        \n                        \n                            \n                                Value : fold-vertical\n                            \n                        \n                        \n                            \n                                 Horizontal\n                            \n                        \n                        \n                            \n                                Value : fold-horizontal\n                            \n                        \n                        \n                            \n                                 None\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n                        \n                            \n                                 Multi\n                            \n                        \n                        \n                            \n                                Value : multi\n                            \n                        \n            \n        \n\n    projects/lib/src/core/split-layout.directive.ts\n    \n        \n            \n                \n                    \n                        \n                        SplitLayoutMode\n                    \n                \n                    \n                        \n                            Defines how the split layout container should be rendered when multi screen\nis detected.\n\n                        \n                    \n                        \n                            \n                                 Flex\n                            \n                        \n                        \n                            \n                                Value : flex\n                            \n                        \n                        \n                            \n                                 Grid\n                            \n                        \n                        \n                            \n                                Value : grid\n                            \n                        \n                        \n                            \n                                 Absolute\n                            \n                        \n                        \n                            \n                                Value : absolute\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n📖 ngx-foldable\n\n\n\n\n\nngx-foldable is a set of components and services to help you build dual-screen experiences for foldable or dual-screen devices, such as the Surface Duo\n\n\n  \n\n\nSee the Live Demo\nStatus\nThis is currently an experimental project aiming to explore how existing web apps could be adapted to build responsive UIs on dual-screen devices, with as little changes as possible on the code.\nHow to test on your browser\nThe dual-screen emulation feature requires Microsoft Edge or Google Chrome canary versions for now, with experimental flags to enable.\nFollow the instructions here to setup your browser for dual-screen emulation.\nLibrary usage\nCheck out the demo source code to see an example usage of the library.\nAdd the library to your Angular project:\nnpm install ngx-foldableImport the library in your app:\nimport { FoldableModule } from 'ngx-foldable';\n...\n\n@NgModule({\n  ...\n  imports: [\n    FoldableModule\n    ...\n  ],\n  ...\n})\nexport class AppModule { }Use the provided fdSplitLayout, fdWindow and fdIfSpan directives to build your layout:\n\n\n\n  \n  \n    This will be displayed on the first window segment of a multi screen or single screen device.\n\n    This is only visible on a single screen device.\n    This is only visible on a multi screen device.\n  \n\n  \n  \n    This will be displayed on the second window segment of a multi screen device.\n\n    This is only visible on multi screen device, regardless of the orientation.\n    This is only visible on horizontal fold spanning.\n    This is only visible on vertical fold spanning.\n  \nUsing the ScreenContext service, you can also receive updates when the screen context changes:\nimport { ScreenContext } from 'ngx-foldable';\n...\nexport class AppComponent {\n  constructor(private screenContext: ScreenContext) {\n    this.screenContext\n      .asObservable()\n      .subscribe(context: ScreenContextData) {\n        console.log('Screen context changed:', context);\n      }\n  }\n}You can read the full documentation here.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2021 Yohan Lasorsa\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        FoldableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FoldableModule\n\n\n\ncluster_FoldableModule_declarations\n\n\n\ncluster_FoldableModule_exports\n\n\n\n\nIfSpanDirective\n\nIfSpanDirective\n\n\n\nFoldableModule\n\nFoldableModule\n\nFoldableModule -->\n\nIfSpanDirective->FoldableModule\n\n\n\n\n\nSplitLayoutDirective\n\nSplitLayoutDirective\n\nFoldableModule -->\n\nSplitLayoutDirective->FoldableModule\n\n\n\n\n\nWindowDirective\n\nWindowDirective\n\nFoldableModule -->\n\nWindowDirective->FoldableModule\n\n\n\n\n\nIfSpanDirective \n\nIfSpanDirective \n\nIfSpanDirective  -->\n\nFoldableModule->IfSpanDirective \n\n\n\n\n\nSplitLayoutDirective \n\nSplitLayoutDirective \n\nSplitLayoutDirective  -->\n\nFoldableModule->SplitLayoutDirective \n\n\n\n\n\nWindowDirective \n\nWindowDirective \n\nWindowDirective  -->\n\nFoldableModule->WindowDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\n RTL support\n Fix test/build\n Publish lib NPM\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            singleFoldHorizontal   (projects/.../media-queries.ts)\n                        \n                        \n                            singleFoldVertical   (projects/.../media-queries.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/core/media-queries.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            singleFoldHorizontal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '(screen-spanning: single-fold-horizontal)'\n                        \n                    \n\n                \n                    \n                        Media query used to detect single fold horizontal screen mode. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            singleFoldVertical\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '(screen-spanning: single-fold-vertical)'\n                        \n                    \n\n                \n                    \n                        Media query used to detect single fold vertical screen mode. \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
